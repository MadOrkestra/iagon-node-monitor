import{w as c}from"./index.E7Qtlpdg.js";const h="/api";var A=function(e){return function(t,n,a){return e(t,n,a)*a}},v=function(e,t){if(e)throw Error("Invalid sort config: "+t)},I=function(e){var t=e||{},n=t.asc,a=t.desc,r=n?1:-1,o=n||a;v(!o,"Expected `asc` or `desc` property"),v(n&&a,"Ambiguous object with `asc` and `desc` config properties");var i=e.comparer&&A(e.comparer);return{order:r,sortBy:o,comparer:i}},E=function(e){return function t(n,a,r,o,i,f,l){var s,p;if(typeof n=="string")s=f[n],p=l[n];else if(typeof n=="function")s=n(f),p=n(l);else{var d=I(n);return t(d.sortBy,a,r,d.order,d.comparer||e,f,l)}var m=i(s,p,o);return(m===0||s==null&&p==null)&&a.length>r?t(a[r],a,r+1,o,i,f,l):m}};function S(e,t,n){if(e===void 0||e===!0)return function(o,i){return t(o,i,n)};if(typeof e=="string")return v(e.includes("."),"String syntax not allowed for nested properties."),function(o,i){return t(o[e],i[e],n)};if(typeof e=="function")return function(o,i){return t(e(o),e(i),n)};if(Array.isArray(e)){var a=E(t);return function(o,i){return a(e[0],e,1,n,t,o,i)}}var r=I(e);return S(r.sortBy,r.comparer||t,r.order)}var g=function(e,t,n,a){var r;return Array.isArray(t)?(Array.isArray(n)&&n.length<2&&(r=n,n=r[0]),t.sort(S(n,a,e))):t};function y(e){var t=A(e.comparer);return function(n){var a=Array.isArray(n)&&!e.inPlaceSorting?n.slice():n;return{asc:function(r){return g(1,a,r,t)},desc:function(r){return g(-1,a,r,t)},by:function(r){return g(1,a,r,t)}}}}var C=function(e,t,n){return e==null?n:t==null?-n:typeof e!=typeof t?typeof e<typeof t?-1:1:e<t?-1:e>t?1:0},_=y({comparer:C});y({comparer:C,inPlaceSorting:!0});let j=c(!1),x=c(!1),w=c(!1),u=c(!1),P=c(!0);console.log("Starting IAG Node Monitor...");try{console.log("Fetching logfile..."),await fetch(h+"/logfile",{headers:{"Content-Type":"application/json"}}).then(e=>e.json()).then(e=>{j.set(e),P.set(!1),u.set(!1)})}catch(e){console.error(e),u.set(e),P.set(!0)}async function N(){try{console.log("Fetching update..."),await fetch(h+"/update",{headers:{"Content-Type":"application/json"}}).then(e=>e.json()).then(e=>{u.set(!1),console.log("Update fetched!");let t=[];j.update(n=>{for(let r of e)n.find(o=>o.timestamp===r.timestamp)||t.push(r);return _([...n,...t]).asc("timestamp")})})}catch(e){u.set(e),console.error("Update failed!",e)}}N();setInterval(N,120*1e3);async function U(){try{console.log("Ping node..."),await fetch(h+"/status",{headers:{"Content-Type":"application/json"}}).then(e=>e.json()).then(e=>{u.set(!1),e.up?console.log("Pong - Node is up!"):console.warn("Pong - Node is down :("),w.set(e.up)})}catch(e){console.error("Ping failed!",e),u.set(e),w.set(!1)}}U();setInterval(U,60*1e3);export{h as P,j as a,_ as b,u as e,P as l,x as s,w as u};
